; `melange.emit` creates build rules to convert source code into JavaScript using the Melange compiler.
; For more details, visit: https://dune.readthedocs.io/en/stable/melange.html#melange-emit
(melange.emit

 ; `target`: Specifies the folder in `_build/default` where the JavaScript files will be saved.
 ; You can use multiple `melange.emit` sections if you wish to produce different outputs, like ES6 and CommonJS, from the same source code.
 (target build)

 ; `alias`: Helps in building specific artifacts. Use `dune build @ghostty_configurator` to build using this alias.
 ; If you don't provide an `alias`, the default one named `melange` will be used.
 (alias ghostty)

 ; `libraries`: These are the dependencies. Dune will create rules to convert the modules in these libraries into JavaScript.
 ; Note: Specify libraries using `(modes melange)`.
 (libraries app)

 (promote (until-clean))

 ; `module_systems`: Choose the type of module system(s) for your code, like es6 or commonjs.
 ; To generate for both, use: (module_systems es6 commonjs)
 ; More on this: https://melange.re/v2.0.0/build-system/#commonjs-or-es6-modules
 (module_systems es6))

; (rule
;  (alias vite_build)
;  (deps 
;    (:config ./vite.config.js)
;    (:pkg_json ./package.json)
;    (source_tree ./public))
;  (targets (dir dist))
;  (action 
;    ; (bash "echo $(pwd) && mkdir dist")
;    (run bun --bun run build)
;    )
;  (mode
;   (promote
;    (until-clean)
;    (into ./public))))
